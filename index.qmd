---
title: "WRAIR AFRICA NIGERIA DASHBOARD | MAY 2024"
format: dashboard
theme: lux
---

```{r}
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse,
               colorspace,
               plotly,
               reactable,
               bslib,
               bsicons,
               shiny,
               here,
               ggspatial,
               janitor,
               spData,
               sf,
               units,
               rgeoboundaries,
               gapminder,
               rnaturalearth,
               countrycode,
               htmltools,
               reactable,
               lubridate,
               zoo, 
               dplyr,
               shinydashboard,
               fontawesome,
               scales,
               readxl,
               openxlsx,
               prettydoc,
               skimr)
```

```{r echo=FALSE}

prog_targets <-  read_csv(here("data/fy24_targets.csv"))

cascade <- read_csv(here("data/fy24_cascade_may.csv"))

vl_data <-  read_csv(here("data/fy24_vl.csv"))


radet <- read_csv(here("data/may_radet.csv"))

radet <- clean_names(radet)



```

```{r}
cascade <- cascade %>% 
  mutate(
    period_date = dmy(paste("01", period)),
    month = month(period_date, label = TRUE, abbr = TRUE),
    year = year(period_date)
  ) %>%
  select(-period_date)

vl_data <- vl_data %>% 
  mutate(vl_lt1000 = rowSums(select(., vl_lt50, vl_50_199, vl_200_999), na.rm=TRUE)
  )
vl_data <- vl_data %>% 
  mutate(low_lv = rowSums(select(., vl_50_199, vl_200_999), na.rm=TRUE)
  )

```

```{r}
# join the data

casc_merge <- cascade %>% 
  left_join(vl_data, by =c("site" = "site", "period_code" = "period_code"))

```

```{r}
# Create indicator totals

#tx_curr <- casc_merge %>%
# filter(month == "May") %>%  # Filter rows where month is "May"
#  select(tx_curr) %>%         # Select the tx_curr column
#  summarise(total_tx_curr = sum(tx_curr, na.rm = TRUE)) %>% # Sum tx_curr, handling NA values
#  pull(total_tx_curr)         # Extract the resulting value


tx_new <- casc_merge %>%
  select(tx_new) %>%         # Select the tx_new column
  summarise(total_tx_new = sum(tx_new, na.rm = TRUE)) %>% # Sum tx_new, handling NA values
  pull(total_tx_new)

hts_tst <- casc_merge %>%
  select(hts_tst) %>%         # Select the tx_new column
  summarise(total_hts_tst = sum(hts_tst, na.rm = TRUE)) %>% # Sum tx_new, handling NA values
  pull(total_hts_tst)
 
hts_pos <- casc_merge %>%
  select(hts_pos) %>%         # Select the tx_new column
  summarise(total_hts_pos = sum(hts_pos, na.rm = TRUE)) %>% # Sum tx_new, handling NA values
  pull(total_hts_pos)

tx_pvls <- casc_merge %>%
  filter(month == "May") %>%  # Filter rows where month is "May"
  select(had_vl) %>%         
  summarise(total_tx_pvls = sum(had_vl, na.rm = TRUE)) %>% 
  pull(total_tx_pvls)         # Extract the resulting value

tx_pvls_n <- casc_merge %>%
  filter(month == "May") %>%  # Filter rows where month is "May"
  select(vl_lt1000) %>%         
  summarise(total_tx_pvls_n = sum(vl_lt1000, na.rm = TRUE)) %>% 
  pull(total_tx_pvls_n)         # Extract the resulting value

lowlv <- casc_merge %>%
  filter(month == "May") %>%  # Filter rows where month is "May"
  select(low_lv) %>%         
  summarise(total_low_lv = sum(low_lv, na.rm = TRUE)) %>% 
  pull(total_low_lv)         # Extract the resulting value

vl_supp <- tx_pvls_n/tx_pvls

# vlc <- tx_pvls/tx_curr

linkage <- tx_new/hts_pos

 
```


```{r}
# Initial cleaning and parameter setting
cut_off_dt <- as.Date("2024-05-31", format="%Y-%m-%d")


radet <- radet %>% 
  mutate(facility = ifelse(facility =="ba Nigerian Army Amoured Centre Medical Reception Station Bauchi", "ba 33 Brigade Medical Center Shadawanka", facility)) %>%
  
  mutate(patient_status = 
        case_when(
          patient_status == "Dead" ~ "Known death",
          patient_status == "Lost to follow up" ~ "Loss to follow up",
          patient_status == "Self Transfer" ~ "Self-transfer",
          patient_status == "Treatment stop" ~ "Stopped treatment",
          TRUE ~ patient_status),
        
        facility =
          case_when(
            facility == "82DMSH Enugu" ~ "82 Division Medical Services and Hospital",
            TRUE ~ facility
          )
  )

radet <- radet %>% 
  rename(sex = gender)

```

```{r}
# Function to print unique values for each date column
#inspect_unique_dates <- function(df) {
 # date_columns <- select(df, contains("date"))
  #for (col_name in names(date_columns)) {
   # cat("\nUnique values in", col_name, ":\n")
    #print(unique(date_columns[[col_name]]))
  #}
#}

# Inspect unique values in date columns
#inspect_unique_dates(radet)



# Function to convert dates in "dd-MMM-yy" format to Date objects
convert_dates <- function(date_column) {
  dmy(date_column)
}

# Apply the conversion function to each date field dynamically
radet <- radet %>%
  mutate(across(contains("date"), ~convert_dates(.), .names = "cleaned_{.col}"))

# Ensure the cleaned dates are in the correct Date format
radet <- radet %>%
  mutate(across(contains("cleaned"), as.Date))

# Verify the conversion to Date objects in the correct format
# head(radet %>% select(contains("cleaned")))
```




```{r, echo=F, message=FALSE, warning=F}
# creating required columns, setting cut off date, and cleaning data



radet <- radet %>% 
    mutate(
        
       status_check =
           case_when((as.Date(cleaned_last_dispensed_date) + arv_refill_days +28)>=cut_off_dt & patient_status != "Known death" & patient_status !="Transferred out" & patient_status !="Stopped treatment"  ~ "Active",
                     TRUE ~ "Inactive"),
         
         mmd =
           case_when(
             is.na(arv_refill_days) ~ NA_character_,
             arv_refill_days <3 ~ "<3",
             arv_refill_days >=3 & arv_refill_days <4 ~ "3",
             arv_refill_days >=4 & arv_refill_days <6 ~ "4-5",
             arv_refill_days >=6 ~ "6+"),
         
        
        age_group = 
          case_when(age_group == "04-Jan" ~ "1-4",
                    age_group == "09-May" ~ "5-9",
                    age_group == "14-Oct" ~ "10-14",
                    TRUE ~ age_group
                    
                    ),
           
         age_ngi =
           case_when(age <15 ~ "<15",
                    TRUE ~ "15+"),
         
         eligible_vl =
           case_when((cut_off_dt - as.Date(cleaned_art_start_date)) >180 & status_check == "Active" ~ "Eligible",
                     TRUE ~ "Ineligible"),
         
         current_vl = 
           case_when(
             is.na(eligible_vl) ~ NA_character_,
             eligible_vl == "Ineligible" ~ NA_character_,
             eligible_vl == "Eligible" & current_vl_result >=1 & (cut_off_dt - as.Date(cleaned_date_of_sample_collection)) <=365 ~ "Current VL",
             TRUE ~ "No VL"),
         
         supp_1000 = 
           case_when(
             is.na(current_vl) ~ NA_character_,
             current_vl == "Current VL" & current_vl_result >0 & current_vl_result <1000 ~ "Suppressed",
             current_vl == "Current VL" & current_vl_result >0 & current_vl_result >=1000 ~ "Unuppressed",
             TRUE ~ "No VL"
           ),
       
         supp_50 = 
           case_when(
             is.na(current_vl) ~ NA_character_,
             current_vl == "Current VL" & current_vl_result >0 & current_vl_result <50 ~ "Suppressed",
             current_vl == "Current VL" & current_vl_result >0 & current_vl_result >=50 ~ "Unuppressed",
             TRUE ~ "No VL"
           ),
         
         vl_category =
           case_when(
             is.na(current_vl_result) ~ NA_character_,
             current_vl == "Current VL" & current_vl_result >0 & current_vl_result <50 ~ "<50",
             current_vl == "Current VL" & current_vl_result >=50 & current_vl_result <200 ~ "50-199",
             current_vl == "Current VL" & current_vl_result >=200 & current_vl_result <1000 ~ "200-999",
            current_vl == "Current VL" & current_vl_result >=1000 ~ "â‰¥1000"
           ),
        
         vl_monitoring = 
           case_when(
             is.na(viral_load_indication)| eligible_vl=="Ineligible" | current_vl =="No VL" ~ NA_character_,
        viral_load_indication = grepl("baseline", viral_load_indication, ignore.case = TRUE) | grepl("pregnancy", viral_load_indication, ignore.case = TRUE) | grepl("routine", viral_load_indication, ignore.case = TRUE) | grepl("1month", viral_load_indication, ignore.case = TRUE) ~ "Routine", 
             TRUE ~ "Targeted"
           ),
        
        
      regimen_line = 
           case_when(regimen_line == "Adult 1st Line" ~ "1st Line",
                     regimen_line == "Adult First Line" ~ "1st Line",
                     regimen_line == "Pediatric 1st Line" ~ "1st Line",
                     regimen_line == "Pediatric 1st line" ~ "1st Line",
                     regimen_line == "Pediatric First Line" ~ "1st Line",
                     regimen_line == "Pediatrics and Adolescent 1st Line <20kg" ~ "1st Line",
                     regimen_line == "Pediatrics and Adolescent 1st Line >30kg" ~ "1st Line",
                     regimen_line == "Pediatrics and Adolescent 1st Line 20-30kg" ~ "1st Line",
                     regimen_line == "Adult 2nd Line" ~ "2nd Line",
                     regimen_line == "Adult Second Line" ~ "2nd Line",
                     regimen_line == "Pediatric 2nd Line" ~ "2nd Line",
                     regimen_line == "Pediatric Second Line" ~ "2nd Line",
                     regimen_line == "Pediatrics and Adolescent 2nd Line <20kg" ~ "1st Line",
                     regimen_line == "Pediatrics and Adolescent 2nd Line >30kg" ~ "1st Line",
                     regimen_line == "Pediatrics and Adolescent 2nd Line 20-30kg" ~ "1st Line",
                     regimen_line == "Adult Third Line" ~ "3rd Line",
                     regimen_line == "Adult 3rd Line" ~ "3rd Line",
                     TRUE ~ regimen_line),
      
      
      
      sex =
        case_when(
          sex == "Other" ~ "Female",
          sex == "transgender" ~ "Female",
          TRUE ~ sex),
      
       service_status =
        case_when(
          is.na(service_status) ~ "Civilian",
          TRUE ~ service_status
        )
   ) 


tx_curr <- radet %>%
  filter(status_check == "Active") %>% 
  summarise(total_tx_curr = n()) %>% # Count the number of active patients
  pull(total_tx_curr)                # Extract the resulting value

vlc <- tx_pvls/tx_curr

```





# PROGRAM CASCADE

##  {height="30%"}

```{r}
value_box(
  title = tags$span("Total Testing", style = "font-size: 30px;"),
  value = scales::comma(hts_tst),
  showcase = bsicons::bs_icon("droplet"),
  theme = "blue"
)
```

```{r}
value_box(
  title = tags$span("Total Positives", style = "font-size: 30px;"),
  value = scales::comma(hts_pos),
  showcase = bsicons::bs_icon("plus-circle-fill"),
  theme = value_box_theme(bg ="#8B0000")
)
```

```{r}
value_box(
  title = tags$span("Total New on ART", style = "font-size: 30px;"),
  value = scales::comma(tx_new),
  showcase = bsicons::bs_icon("prescription"),
  theme = value_box_theme(bg ="#518")
)
```

```{r}
value_box(
  title = tags$span("Linkage to ART", style = "font-size: 30px;"),
  value = scales::percent(linkage),
  showcase = bsicons::bs_icon("link-45deg"),
  theme = value_box_theme(bg ="#006611")
)
```

##  {height="30%"}

```{r}
value_box(
  title = tags$span("Current on Treatment*", style = "font-size: 30px;"),
  value = scales::comma(tx_curr),
  showcase = bsicons::bs_icon("people"),
  theme = value_box_theme(bg ="#002a2a")
)
```

```{r}
value_box(
  title = tags$span("Had a Viral Load", style = "font-size: 30px;"),
  value = scales::comma(tx_pvls),
  showcase = bsicons::bs_icon("virus"),
  theme = value_box_theme(bg ="#004646")
)
```

```{r}
value_box(
  title = tags$span("Total Suppressed", style = "font-size: 30px;"),
  value = scales::comma(tx_pvls_n),
  showcase = bsicons::bs_icon("chevron-double-down"),
  theme = value_box_theme(bg ="#a9d0b8")
)
```

##  {height="30%"}

```{r}
value_box(
  title = tags$span("VL Coverage", style = "font-size: 30px;"),
  value = scales::percent(vlc),
  showcase = bsicons::bs_icon("align-top"),
  theme = value_box_theme(bg ="#93bdcf")
)
```

```{r}
value_box(
  title = tags$span("VL Suppression", style = "font-size: 30px;"),
  value = scales::percent(vl_supp),
  showcase = bsicons::bs_icon("box-arrow-in-down-right"),
  theme = value_box_theme(bg ="#0aff76")
)
```

```{r}
value_box(
  title = tags$span("Low Level Viraemia", style = "font-size: 30px;"),
  value = scales::comma(lowlv),
  showcase = bsicons::bs_icon("virus2"),
  theme = value_box_theme(bg ="#9d0216")
)
```

##  {height="10%"}

**\*Updates coming to TX_CURR numbers**

# TARGETS
##














